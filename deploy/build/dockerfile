FROM mcr.microsoft.com/dotnet/sdk:8.0-preview AS builder-back

ARG MAIN_CSPROJ_PATH
ARG ROOT_FOLDER
ARG SLN_NAME

ENV SRC /app

RUN mkdir ${SRC}
WORKDIR ${SRC}

#region optimize dotnet restore

COPY ${ROOT_FOLDER}/*/*.csproj ${SRC}/${ROOT_FOLDER}/
WORKDIR ${SRC}/${ROOT_FOLDER}/
RUN find *.csproj | sed -r -e 's/.*\.(.+).csproj/\1/g' | xargs mkdir -p
RUN find *.csproj | sed -r -e 's/(.*\.(.+).csproj)/.\/\1 .\/\2/g' | xargs -I % sh -c 'mv %'

COPY ${ROOT_FOLDER}/Adapters/*/*.csproj ${SRC}/${ROOT_FOLDER}/Adapters/
WORKDIR ${SRC}/${ROOT_FOLDER}/Adapters
RUN find *.csproj | sed -r -e 's/.*\.(.+).csproj/\1/g' | xargs mkdir -p
RUN find *.csproj | sed -r -e 's/(.*\.(.+).csproj)/.\/\1 .\/\2/g' | xargs -I % sh -c 'mv %'


RUN dotnet restore ${SRC}/${ROOT_FOLDER}/${MAIN_CSPROJ_PATH}
# endregion optimize dotnet restore

COPY ${ROOT_FOLDER}/ ${SRC}/${ROOT_FOLDER}/
RUN dotnet publish ${SRC}/${ROOT_FOLDER}/${MAIN_CSPROJ_PATH} --no-restore -o /app/out


# Building front
FROM --platform=linux/amd64 node:20 as builder-front

COPY front/package.json /front/
COPY front/yarn.lock /front/
RUN cd /front && yarn

COPY front /front/
RUN cd /front && yarn build


# Running
FROM mcr.microsoft.com/dotnet/aspnet:8.0-preview AS production

ARG ENTRY_DLL
ENV ENTRY_DLL ${ENTRY_DLL}

# Set the environment variable for the timezone
ENV TZ=Europe/Paris

# Update the package list and install any necessary packages
RUN apt-get update && apt-get install -y tzdata

# Link /etc/localtime to the appropriate timezone file
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone


WORKDIR /back
COPY --from=builder-back /app/out .

COPY --from=builder-front /front/dist /back/wwwroot
ENV FRONT_PATH /back/wwwroot

EXPOSE 4000
ENV ASPNETCORE_URLS http://+:4000


CMD dotnet ${ENTRY_DLL}